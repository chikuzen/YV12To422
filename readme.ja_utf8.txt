YV12To422

avisynth2.60/avisynth+用のフィルタープラグインです。
名前の通り、YV12なクリップをYV16/YUY2に変換します。

基本的にtritical氏のddcc.dllに入っているyv12toyuy2と同じ出力になるように色差の
補間を行いますが、オプションのパラメータとエラーメッセージ、及びreadme以外は、
ほぼ0から書いています。


必須要件：
・avisynth2.60 または avisynth+r1576以降
・SSE2が使えるCPU
・WindowsVista sp2以降
・VisualStudio2013用VC++再頒布可能パッケージ


使い方：

    YV12To422(clip, int "itype", bool "interlaced", int "cplace", bool "yuy2",
              bool "avx2")

    まだitype=2とか実装してないので、オプションは変更される可能性が大きいです。

    itype - 色差の補間方法
        0 - 補間しない(nearest neighbor)
        1 - 線型補間(linear)

        default: 1

    interlaced - インタレか否か

        default: false

    cplace - 色差のサンプルの位置を指定する(垂直方向のみ)

        プログレッシブの場合

            0 - 色差は偶数ライン上に存在する。

            1 - 色差は2つのラインの中央に存在する(mpeg1/mpeg2/mpeg4/avc等の標準)。

            2 - 色差は4ラインごとに0番目と1番目の位置に存在する。
                プログレッシブな素材を422->420変換する際にSeparateFieldsしてから
                各フィールドの奇数ラインを捨ててしまった場合に相当する。
                (どうやらこんなことするハードやソフトを作るバカがいたらしい)

            3 - 色差は偶数ラインの中央と奇数ラインの中央にある。
                プログレッシブな素材を422->420変換する際にSeparateFieldsして
                それぞれ2ラインごとに混ぜてしまった場合に相当する。

        インタレの場合

            0 - 色差はそれぞれのフィールドの偶数ライン上にある。
                インタレな422を420に変換する際、SeparateFieldsしてから奇数ライン
                を捨てた場合に相当する。

            1 - 色差はそれぞれのフィールドの2ラインごとの中央にある。
                インタレ422を420にする際、SeparateFieldsしてから2ラインごとに
                混ぜた場合に相当する。

            2 - トップフィールドの色差は4分の1ピクセル下にずらし、ボトムフィールド
                の色差は4分の1ピクセル上にずらした位置にある。
                インタレ422->420の際にSparateFieldsしてから、トップフィールドは
                2ラインごとに75:25の割合で混ぜ、ボトムフィールドは25:75の割合で
                混ぜた場合に相当する。
                これは結果としてプログレッシブの場合の1の方法と同じ位置になる。
                mpeg2/mpeg4/avcの標準。

            3 - UとVがそれぞれ各フィールドにおいて互い違いに別ライン上に存在する。
                インタレ422->420の際、SeparateFieldsしてからUは奇数ライン、Vは
                偶数ラインを捨てた場合に相当する。
                DV-PALの標準。

          **プログレッシブな422をインタレの2の方法で420変換した場合、色差の位置は
            プログレの1の場合と多分同じになります。よってそのようなフレームを422に
            再変換したければ、プログレの1を指定するのが最もよいでしょう。
            ただし、もしかしたら別の方法で変換されている可能性もあるので、その場合は
            インタレの1や2も試した方がよいでしょう。

        default: interlaced=falseなら1、trueなら2

    yuy2 - 出力をYUY2にするか否か

        このフィルターは420->422変換をyv12toyuy2とは違って、まずは一端yv16に変換します。
        このためこれがtrueだとスピードは落ちますが、たぶんそっちの方が需要は高いと
        思われるのでtrueを規定値にしてあります。

        default: true


    avx2 - 処理をAVX2を使って行うか否か。

        yv12toyuy2のthreadsをやめた替わりにSSE2を標準で使うようにしました。
        さらにこれをtrueにすればSSE2の替わりにAVX2で処理を行います(AVX2対応CPUのみ)が、
        3％程度しか速くならないようです……。

        ちなみにavisynth2.60の場合、本来できるはずのメモリのアライメント指定が
        できないバグが放置されているので、もしavisynth2.60でこれをtrueにすれば
        まず間違いなくクラッシュします。
        avisynth+のほうはこれは既に直っているので問題ない(はず)です。
        参考URL: https://github.com/AviSynth/AviSynthPlus/commit/ab4ea303b4ca78620c2ef90fdaad184bc18b7708


    lshift - 色差の水平位置をずらすか否か。

        色差の各サンプルを左隣りのものと75:25の割合でまぜることで、左方向に1/4サンプル分
        ずらします。
        SMPTEによるYUV4:2:2の色差の水平位置の標準は、横にならんだ輝度のサンプル２つのうちの
        左側(left origin)ですが、jpegやmpeg1などは420に変換する際に二つのサンプルの中央に
        なるようにするため、もし補正する必要がある場合はtrueにしましょう。

        default: false


ライセンス:

    参考にしたddcc.dllがGPLv2なので、こちらもGPLv2にしておきます。


ソースコード:

    githubで公開中
    https://github.com/chikuzen/YV12To422/


ToDo:
    ・itype=2(cubic補間)の実装


連絡先:
    なにかあったらgithubのissueかtwitter(@mtfmk)にでも。
